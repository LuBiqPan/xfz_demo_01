function Banner(){this.index=1,this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$(".banner-ul"),this.pageControl=$(".page-control"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length}function Index(){this.page=2,template.defaults.imports.timeSince=function(n){var e=new Date(n),t=e.getTime(),r=((new Date).getTime()-t)/1e3;return r<60?"刚刚":60<=r&&r<3600?parseInt(r/60)+"分钟前":3600<=r&&r<86400?parseInt(r/60/60)+"小时前":86400<=r&&r<2592e3?parseInt(r/60/60/24)+"天前":e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+" "+e.getHours()+": "+e.getMinutes()}}Banner.prototype.initBanner=function(){var n=this,e=n.liList.eq(0).clone(),t=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(e),n.bannerUl.prepend(t),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,e=0;e<n.bannerCount;e++){var t=$("<li></li>");n.pageControl.append(t),0===e&&t.addClass("active"),n.pageControl.css({width:28*n.bannerCount})}},Banner.prototype.toggleArrow=function(n){var e=this;n?(e.leftArrow.show(),e.rightArrow.show()):(e.leftArrow.hide(),e.rightArrow.hide())},Banner.prototype.animate=function(){var n=this;n.bannerUl.animate({left:-798*n.index},1e3);var e=n.index;0===e?e=n.bannerCount-1:e===n.bannerCount+1?e=0:e-=1,n.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},5e3)},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenPageControl=function(){var t=this;t.pageControl.children("li").each(function(n,e){$(e).click(function(){t.index=n+1,t.animate()})})},Banner.prototype.run=function(){this.initBanner(),this.initPageControl(),this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.listenPageControl()},Index.prototype.listenLoadMoreEvent=function(){var r=this,i=$("#load-more-btn");i.click(function(){xfzajax.get({url:"/news/list/",data:{p:r.page},success:function(n){if(200===n.code){var e=n.data;if(0<e.length){var t=template("news-item",{newses:e});$(".list-inner-group").append(t),r.page+=1}else i.hide()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent()},$(function(){var n=new Banner,e=new Index;n.run(),e.run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
