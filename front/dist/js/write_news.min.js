function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){console.log(e.data);var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenUploadQiniuFileEvent=function(){var s=this;$("#thumbnail-btn").change(function(){var r=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,n=r.name.split(".").length,o=(new Date).getTime()+"."+r.name.split(".")[n-1],i={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","audio/mp3"]},a={userCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(r,o,t,i,a).subscribe({next:s.handleFileUploadProgress,error:s.handleFileUploadError,complete:s.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var n=$(".progress-bar");n.css({width:t}),n.text(t)},News.prototype.handleFileUploadError=function(e){console.log(e),News.progressGroup.hide()},News.prototype.handleFileUploadComplete=function(e){console.log(e),News.progressGroup.hide();var t="http://porbkvyou.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t);var n=$(".progress-bar");n.css({width:"0"}),n.text("0%")},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),n=$("input[name='title']").val(),o=$("select[name='category']").val(),i=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),r=window.ue.getContent(),s="";s=t?"/cms/edit_news/":"/cms/write_news/",xfzajax.post({url:s,data:{title:n,category:o,desc:i,thumbnail:a,content:r,pk:t},success:function(e){200===e.code&&xfzalert.alertSuccess("发布成功",function(){window.location.reload()})}})})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listenUploadQiniuFileEvent(),e.listenSubmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
