function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){console.log(e.data);var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenUploadQiniuFileEvent=function(){var l=this;$("#thumbnail-btn").change(function(){var r=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,n=r.name.split(".").length,o=(new Date).getTime()+"."+r.name.split(".")[n-1],i={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","audio/mp3"]},a={userCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(r,o,t,i,a).subscribe({next:l.handleFileUploadProgress,error:l.handleFileUploadError,complete:l.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var n=$(".progress-bar");n.css({width:t}),n.text(t)},News.prototype.handleFileUploadError=function(e){console.log(e),News.progressGroup.hide()},News.prototype.handleFileUploadComplete=function(e){console.log(e),News.progressGroup.hide();var t="http://porbkvyou.bkt.clouddn.com"+e.key;$("input[name='thumbnail']").val(t);var n=$(".progress-bar");n.css({width:"0"}),n.text("0%")},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();$("input[name='title']").val(),$("select[name='select']").val(),$("input[name='desc']").val(),$("input[name='thumbnail']").val();var t=window.ue.getContent();console.log(t),xfzajax({})})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listenUploadQiniuFileEvent(),e.listenSubmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
