function FrontBase(){}function getCookie(t){var e=null;if(document.cookie&&""!==document.cookie)for(var n=document.cookie.split(";"),a=0;a<n.length;a++){var o=jQuery.trim(n[a]);if(o.substring(0,t.length+1)===t+"="){e=decodeURIComponent(o.substring(t.length+1));break}}return e}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),e=$(".user-more-box");t.hover(function(){e.show()},function(){e.hide()})};var myajax={get:function(t){t.method="get",this.ajax(t)},post:function(t){t.method="post",this._ajaxSetup(),this.ajax(t)},ajax:function(t){$.ajax(t)},_ajaxSetup:function(){$.ajaxSetup({beforeSend:function(t,e){/^(GET|HEAD|OPTIONS|TRACE)$/.test(e.type)||this.crossDomain||t.setRequestHeader("X-CSRFToken",getCookie("csrftoken"))}})}};function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenSignupEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,e=$(".signin-btn"),n=$(".signup-btn"),a=$(".close-btn");e.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),n.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:"0"}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var t=$(".signin-group"),o=t.find("input[name='telephone']"),s=t.find("input[name='password']"),i=t.find("input[name='remember']");t.find(".submit-btn").click(function(t){t.preventDefault();var e=o.val(),n=s.val(),a=i.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:e,password:n,remember:a?1:0,csrfmiddlewaretoken:$("#csrf_token").val()},success:function(t){window.location.reload()}})})},Auth.prototype.listenSignupEvent=function(){var f=$(".signup-group");f.find(".submit-btn").click(function(t){t.preventDefault();var e=f.find("input[name='telephone']"),n=f.find("input[name='username']"),a=f.find("input[name='img_captcha']"),o=f.find("input[name='password1']"),s=f.find("input[name='password2']"),i=f.find("input[name='sms_captcha']"),c=e.val(),r=n.val(),p=a.val(),u=o.val(),l=s.val(),h=i.val();xfzajax.post({url:"/account/register/",data:{telephone:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){200===t.code&&window.location.reload()},fail:function(t){window.messageBox.showError("Server internal error.")}})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功"),t.smsCaptcha.addClass("disabled");var e=30;t.smsCaptcha.unbind("click");var n=setInterval(function(){t.smsCaptcha.text(e+"s"),--e<=0&&(clearInterval(n),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var e=this,t=$(".sms-captcha-btn"),n=$(".signup-group input[name='telephone']");t.click(function(){var t=n.val();t||messageBox.showInfo("Please type a telephone number."),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&e.smsSuccessEvent()},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){template&&(template.defaults.imports.timeSince=function(t){var e=new Date(t),n=e.getTime(),a=((new Date).getTime()-n)/1e3;return a<60?"刚刚":60<=a&&a<3600?parseInt(a/60)+"分钟前":3600<=a&&a<86400?parseInt(a/60/60)+"小时前":86400<=a&&a<2592e3?parseInt(a/60/60/24)+"天前":e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+" "+e.getHours()+": "+e.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
